# Generated by Django 4.2.1 on 2023-05-24 15:06

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import plant.models
import utilities.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('common_name', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, unique=True), size=5, unique=True, validators=[plant.models.validate_array_length])),
                ('common_name_ne', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, unique=True), size=5, unique=True, validators=[plant.models.validate_array_length])),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('description_ne', django_ckeditor_5.fields.CKEditor5Field()),
                ('medicinal_properties', django_ckeditor_5.fields.CKEditor5Field()),
                ('medicinal_properties_ne', django_ckeditor_5.fields.CKEditor5Field()),
                ('duration', models.CharField(choices=[('annual', 'Annual'), ('biennial', 'Biennial'), ('perennial', 'Perennial'), ('ephemeral', 'Ephemeral'), ('deciduous', 'Deciduous'), ('evergreen', 'Evergreen')], max_length=10)),
                ('growth_habit', models.CharField(choices=[('herb', 'Herb'), ('shrub', 'Shrub'), ('tree', 'Tree'), ('graminoid', 'Graminoid'), ('subshrub', 'Subshrub'), ('vine', 'Vine')], max_length=10)),
                ('wikipedia_link', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='wikipedia_link')),
                ('other_resources_links', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(unique=True), size=5, unique=True, validators=[plant.models.validate_array_length])),
                ('no_of_observations', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlantFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='title')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Plant Family',
                'verbose_name_plural': 'Plant Families',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PlantGenus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='title')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='slug')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genuses', to='plant.plantfamily')),
            ],
            options={
                'verbose_name': 'Plant Genus',
                'verbose_name_plural': 'Plant Genuses',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PlantSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='title')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='slug')),
                ('genus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='species', to='plant.plantgenus')),
            ],
            options={
                'verbose_name': 'Plant Species',
                'verbose_name_plural': 'Plant Species',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PlantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('part', models.CharField(choices=[('flower', 'Flower'), ('leaf', 'leaf'), ('fruit', 'fruit'), ('bark', 'bark'), ('other', 'other')], max_length=7)),
                ('image', models.ImageField(upload_to=plant.models.get_upload_to, validators=[utilities.validators.ImageValidator(height=300, size=512000, width=300)])),
                ('default', models.BooleanField(default=False)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='plant.plant')),
            ],
            options={
                'verbose_name': 'PlantImage',
                'verbose_name_plural': 'PlantImages',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='plant',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plants', to='plant.plantfamily'),
        ),
        migrations.AddField(
            model_name='plant',
            name='genus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='genus', to='plant.plantgenus'),
        ),
        migrations.AddField(
            model_name='plant',
            name='species',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='species', to='plant.plantspecies'),
        ),
    ]
